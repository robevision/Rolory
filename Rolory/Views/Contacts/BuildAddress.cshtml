@model Rolory.Models.Contact
@{
    ViewBag.Title = "BuildAddress";

    IEnumerable<SelectListItem> gender = ViewBag.Gender;
    IEnumerable<SelectListItem> category = ViewBag.Category;
    IEnumerable<SelectListItem> relationship = ViewBag.Relationship;
    IEnumerable<SelectListItem> types = ViewBag.Types;
    IEnumerable<SelectListItem> states = ViewBag.States;
    IEnumerable<SelectListItem> genders = ViewBag.Gender;
}
<br />
<div class="row">
    <div class="breadcrumb">
        <div class="col-md-push-9">
            <h2>Add Address</h2>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
}
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.NetworkerId)
    @Html.HiddenFor(model => model.DescriptionId)
    <div class="form-group">
        @Html.LabelFor(model => model.Description.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Description.Gender, gender, "Select Gender", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="container-fluid">
        <h4>Address</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.AddressType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownListFor(model => model.Address.AddressType, types, "Select Type", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.AddressType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Address.StreetAddress)
                    @Html.ValidationMessageFor(model => model.Address.StreetAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Address.Unit)
                    @Html.ValidationMessageFor(model => model.Address.Unit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Locality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Address.Locality)
                    @Html.ValidationMessageFor(model => model.Address.Locality, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownListFor(model => model.Address.Region, states, "Select Region", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.Region, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Address.ZipCode)
                    @Html.ValidationMessageFor(model => model.Address.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Address.CountryName)
                    @Html.ValidationMessageFor(model => model.Address.CountryName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" @*onclick="location.href='@Html.Action("BuildAddress", "Contacts")'"*@/>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

