@model Rolory.Models.ContactDescriptionViewModel

    @{
        ViewBag.Title = "Build";
        IEnumerable<SelectListItem> gender = ViewBag.Gender;
        IEnumerable<SelectListItem> category = ViewBag.Category;
        IEnumerable<SelectListItem> relationship = ViewBag.Relationship;
    }
    <br />
    <div class="row">
        <div class="breadcrumb">
            <div class="col-md-push-9">
                <h2>Add Basic Info</h2>
            </div>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Contact.Id)
            @Html.HiddenFor(model => model.Contact.NetworkerId)
            <div class="form-group">
                @Html.LabelFor(model => model.Description.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Description.Gender, gender, "Select Gender", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date"
                           @Html.EditorFor(model => model.Description.BirthDate, "Type Date", new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Description.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Description.Category, category, "Select Category", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description.Relationship, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Description.Relationship, relationship, "Select Relationship", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description.Relationship, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
