@model Rolory.Models.ContactDescriptionViewModel

@{
    ViewBag.Title = "About";
    var moment = ViewBag.Moment;
}
<style type="text/css">
    @* info card styling *@ 
    
    .center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .card {
        width: 450px;
        height: 250px;
        background-color: #fff;
        background: linear-gradient(#f8f8f8, #fff);
        box-shadow: 0 8px 16px -8px rgba(0,0,0,0.4);
        border-radius: 6px;
        overflow: hidden;
        position: relative;
        margin: 1.5rem;
    }

        .card h1 {
            text-align: center;
        }

        .card .additional {
            position: absolute;
            width: 150px;
            height: 100%;
            background: linear-gradient(#158cba, #D1E1E4);
            transition: width 0.4s;
            overflow: hidden;
            z-index: 2;
        }

        .card.green .additional {
            background: linear-gradient(#92bCa6, #A2CCB6);
        }


        .card:hover .additional {
            width: 100%;
            border-radius: 0 5px 5px 0;
        }

        .card .additional .user-card {
            width: 150px;
            height: 100%;
            position: relative;
            float: left;
        }

            .card .additional .user-card::after {
                content: "";
                display: block;
                position: absolute;
                top: 10%;
                right: -2px;
                height: 80%;
                border-left: 2px solid rgba(0,0,0,0.025);
               
            }

            .card .additional .user-card .level,
            .card .additional .user-card .points {
                top: 15%;
                color: #fff;
                text-transform: uppercase;
                font-size: 0.75em;
                font-weight: bold;
                background: rgba(224,232,234,0.15);
                padding: 0.125rem 0.75rem;
                border-radius: 100px;
                white-space: nowrap;
            }

            .card .additional .user-card .points {
                top: 85%;
            }

            .card .additional .user-card svg {
                top: 50%;
            }

        .card .additional .more-info {
            width: 300px;
            float: left;
            position: absolute;
            left: 150px;
            height: 100%;
        }

            .card .additional .more-info h1 {
                color: #fff;
                margin-bottom: 0;
            }

        .card.green .additional .more-info h1 {
            color: #224C36;
        }

        .card .additional .coords {
            margin: 0 1rem;
            color: #fff;
            font-size: 1rem;
        }

        .card.green .additional .coords {
            color: #325C46;
        }

        .card .additional .coords span + span {
            float: right;
        }

        .card .additional .stats {
            font-size: 2rem;
            display: flex;
            position: absolute;
            bottom: 1rem;
            left: 1rem;
            right: 1rem;
            top: auto;
            color: #fff;
        }

        .card.green .additional .stats {
            color: #325C46;
        }

        .card .additional .stats > div {
            flex: 1;
            text-align: center;
        }

        .card .additional .stats i {
            display: block;
        }

        .card .additional .stats div.title {
            font-size: 0.75rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        .card .additional .stats div.value {
            font-size: 1.5rem;
            font-weight: bold;
            line-height: 1.5rem;
        }

            .card .additional .stats div.value.infinity {
                font-size: 2.5rem;
            }

        .card .general {
            width: 300px;
            height: 100%;
            position: absolute;
            top: 0;
            right: 0;
            z-index: 1;
            box-sizing: border-box;
            padding: 1rem;
            padding-top: 0;
        }

            .card .general .more {
                position: absolute;
                bottom: 1rem;
                right: 1rem;
                font-size: 0.9em;
            }

    
    @* info card styling *@ 
    
    .flip3D {
        width: 480px;
        height: 288px;
        margin: 10px;
        float: left;
    }
    .flip3D > .front {
        position: absolute;
        transform: perspective(600px) rotateY(0deg);
        background-image: url('/Content/images/empty.png');
        width: 480px;
        height: 288px;
        border-radius: 7px;
        backface-visibility: hidden;
        transition: transform .5s linear 0s;
    }
    .flip3D > .back {
        position: absolute;
        transform: perspective(600px) rotateY(180deg);
        background-image: url('/Content/images/empty.png'); 
        width: 480px;
        height: 288px;
        border-radius: 7px;
        backface-visibility: hidden;
        transition: transform .5s linear 0s;
    }
 .flip3D:hover > .front
 {
     transform: perspective(600px) rotateY(-180deg);
 }
    .flip3D:hover > .back {
        transform: perspective(600px) rotateY(0deg);
    }

</style>

<br />
<div class="row">
    <div class="breadcrumb">
        <div class="col-md-push-9">
            <h2>About</h2>
        </div>
    </div>
</div>
<div class="container">
    <div class="col-md-4">

    </div>
    <br />
    @*<div class="flip3D">
            <div class="back"></div>
            <div class="front"></div>
        </div>*@

    @* info card *@

    <div class="center">
        <div class="card">
            <div class="additional">
                <div class="user-card">
                    <div class="level center">
                      
                        @if (Model.Contact.InContact == true)
                        {
                            <div>
                                You are in touch with @Model.Contact.GivenName.
                            </div>
                        }
                            else
                            {
                                <div> Last connected @ViewBag.Moment days ago</div>


                            }
                    </div>
                    <div class="points center">
                        <div>  @Html.DisplayFor(model => model.Contact.Email)</div>

                        <div>@Html.DisplayFor(model => model.Contact.PhoneType): @Html.DisplayFor(model => model.Contact.PhoneNumber)</div>
                    </div>
                    <svg width="110" height="110" viewBox="0 0 250 250" xmlns="http://www.w3.org/2000/svg" role="img" aria-labelledby="title desc" class="center">
                        <title id="title">@Html.DisplayFor(model => model.Description.Relationship)</title>
                        <desc id="desc">Cartoon of a Caucasian woman smiling, and wearing black glasses and a purple shirt with white collar drawn by Alvaro Montoro.</desc>
                       
                        
                        <circle cx="125" cy="125" r="120" @*fill="rgba(0,0,0,0.15)"*@ />
                        <g stroke="none" stroke-width="0" clip-path=   @*<img src="@Url.Content(Model.Contact.ImagePath)" width="150" height="200" />*@>
                            <rect x="0" y="0" width="250" height="250" @*fill="#b0d2e5"*@ />
                           
                        </g>
                    </svg>
                </div>
                <div class="more-info">
                    <h1>@Html.DisplayFor(model => model.Contact.Prefix) @Html.DisplayFor(model => model.Contact.GivenName)  @Html.DisplayFor(model => model.Contact.FamilyName)</h1>
                    <div class="coords">
                        <span>Company: @Html.DisplayFor(model => model.Contact.Organization)</span>
                        <span>Added January 2019</span>
                    </div>
                    <div class="coords">
                        <span>Role: @Html.DisplayFor(model => model.Contact.WorkTitle)</span>
                        <span>@Html.DisplayFor(model => model.Contact.Address.Locality), @Html.DisplayFor(model => model.Contact.Address.Region)</span>
                    </div>
                    <div class="stats">
                        <div>
                            <div class="title">Placeholder 1</div>
                            <i class="fa fa-trophy"></i>
                            <div class="value">2</div>
                        </div>
                        <div>
                            <div class="title">Placeholder 2</div>
                            <i class="fa fa-gamepad"></i>
                            <div class="value">27</div>
                        </div>
                        <div>
                            <div class="title">Placeholder 3</div>
                            <i class="fa fa-group"></i>
                            <div class="value">123</div>
                        </div>
                        <div>
                            <div class="title">Placeholder 4</div>
                            <i class="fa fa-coffee"></i>
                            <div class="value infinity">∞</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="general">
                <h1>@Html.DisplayFor(model => model.Contact.Prefix) @Html.DisplayFor(model => model.Contact.GivenName)  @Html.DisplayFor(model => model.Contact.FamilyName)</h1>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a volutpat mauris, at molestie lacus. Nam vestibulum sodales odio ut pulvinar.</p>
                <span class="more">Mouse over the card for more info</span>
            </div>
        </div>

      
        </div>

    </div>



    @* info card *@

    @if (String.IsNullOrEmpty(Model.Contact.ImagePath) != true)
    {
        <div class="col-md-4"></div>
        <div class="col-md-4" style="text-align:center">
            @*<h3>
                @Html.DisplayFor(model => model.Contact.Prefix) @Html.DisplayFor(model => model.Contact.GivenName)  @Html.DisplayFor(model => model.Contact.FamilyName)
            </h3>*@
            <div class="col-lg-2">
                <br />
                @*<h4 style="text-align:center">
                    @Html.DisplayFor(model => model.Contact.Email)
                </h4>
                <h4 style="text-align:center">
                    @Html.DisplayFor(model => model.Contact.PhoneNumber)
                </h4>*@
            </div>
        </div>
        @*<img src="@Url.Content(Model.Contact.ImagePath)" width="150" height="200" />*@
    }

    else
    {
        <div class="col-md-4"></div>
        <div class="col-md-4" style="text-align:center">
            <h3>
                @Html.DisplayFor(model => model.Contact.Prefix) @Html.DisplayFor(model => model.Contact.GivenName)  @Html.DisplayFor(model => model.Contact.FamilyName)
            </h3>
            <div class="col-lg-2">
                <br />
                @*<h4 style="text-align:center">
                    @Html.DisplayFor(model => model.Contact.Email)
                </h4>
                <h4 style="text-align:center">
                    @Html.DisplayFor(model => model.Contact.PhoneNumber)
                </h4>*@
            </div>
        </div>
        <div>
            <style>
                em {
                    background-image: url('/Content/images/empty.png');
                }
            </style>
            <em style="background:center">
                @Html.ActionLink("Upload Image", "UploadImage", "Contacts", new { id = Model.Contact.Id }, htmlAttributes: new { @class = "media-middle", style = "" })
            </em>

        </div>
    }
</div>

<div class="container">
    <div class="col-md-12"> @Html.ActionLink("Details", "Details", "Contacts", new { id = Model.Contact.Id }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })</div>
    <br />
    <br />
    <br />

    <div class="col-lg-8"> <h2>@Html.ActionLink("Interactions", "Index", "Interactions", new { id = Model.Contact.Id }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })</h2></div>
    <h5>
        @ViewBag.Temperature[0]
    </h5>
    <h5>
        @ViewBag.Temperature[1]
    </h5>
</div>


    <div class="container">

    </div>












